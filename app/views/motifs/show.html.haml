- if motif.retracted?
  .row
    .col-12
      .attention
        Retracted!
        %br
        Do not use this motif!

%ul.nav.nav-tabs#motifTabs{role: 'tablist'}
  %li.nav-item
    %a.nav-link.default-tab.active#main-tab{href: '#mainInfo', role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'mainInfo', selected: 'true'}} Summary
  %li.nav-item
    %a.nav-link#motif-tab{href: "#motifInfo", role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'motifInfo', selected: 'false'}} Motif
  %li.nav-item
    %a.nav-link#benchmarks-tab{href: "#benchmarksInfo", role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'benchmarksInfo', selected: 'false'}} Benchmarks
  %li.nav-item
    %a.nav-link#tf-tab{href: "#tfInfo", role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'tfInfo', selected: 'false'}} TF
  %li.nav-item
    %a.nav-link#subtype-tab{href: "#subtypeInfo", role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'subtypeInfo', selected: 'false'}} Subtype
  %li.nav-item
    %a.nav-link#matrices-tab{href: "#matricesInfo", role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'matricesInfo', selected: 'false'}} Matrices
  %li.nav-item
    %a.nav-link#downloads-tab{href: "#downloadsInfo", role: 'tab', data: {toggle: 'tab'}, aria: {controls: 'downloadsInfo', selected: 'false'}} Downloads

.tab-content#motifTabContent
  .tab-pane.fade.show.active#mainInfo{role: 'tabpanel', aria: {labelledby: 'main-tab'}}
    .row
      .col-12
        %table.key_value_info
          %tbody
            = table_info_row motif, :full_name
            = table_info_row motif, :gene_name_human
            = table_info_row(motif, :gene_synonyms_human) do |motif|
              = motif.gene_synonyms_human.join(', ')
            = table_info_row motif, :gene_name_mouse
            = table_info_row(motif, :gene_synonyms_mouse) do |motif|
              = motif.gene_synonyms_mouse.join(', ')
            = table_info_row motif, :big_logo, html_options: {value_column_html: {class: 'sequence_logo'} }
            = table_info_row motif, :big_logo_revcomp, html_options: {value_column_html: {class: 'sequence_logo'} }
            = table_info_row motif, :motif_subtype #, header_cell: ('Motif subtype' + help_icon(href: help_path(anchor: 'description_quality_score'), title: 'Click for details on quality assessment.')).html_safe
            = table_info_row motif, :quality, header_cell: ('Quality' + help_icon(href: help_path(anchor: 'description_quality_score'), title: t((motif.collection == 'H13CORE') ? 'tips.quality_html' : 'tips.quality_html_subcollection'), html: true)).html_safe
  .tab-pane.fade#motifInfo{role: 'tabpanel', aria: {labelledby: 'motif-tab'}}
    .row
      .col-12
        %table.key_value_info
          %tbody
            = table_info_row motif, :model_length
            = table_info_row motif, :consensus
            = table_info_row motif, :gc_content
            = table_info_row(motif, :information_content_both) {|motif| "#{motif.information_content_total} / #{motif.information_content_per_base}" }
            = table_info_row motif, :data_sources_full
            = table_info_row motif, :num_words_in_alignment

  .tab-pane.fade#benchmarksInfo{role: 'tabpanel', aria: {labelledby: 'benchmarks-tab'}}
    = render partial: 'benchmarks', locals: {motif: motif}
  .tab-pane.fade#tfInfo{role: 'tabpanel', aria: {labelledby: 'tf-tab'}}
    .row
      .col-12
        %table.key_value_info
          %tbody
            = table_info_row(motif, :tfclass_superclass)
            = table_info_row(motif, :tfclass_class)
            = table_info_row(motif, :tfclass_family)
            = table_info_row(motif, :tfclass_subfamily)
            = table_info_row(motif, :tfclass_id)
            = table_info_row(motif, :hgnc_ids)
            = table_info_row(motif, :mgi_ids)
            = table_info_row(motif, :entrezgene_ids_human)
            = table_info_row(motif, :entrezgene_ids_mouse)
            = table_info_row(motif, :uniprot_id_human)
            = table_info_row(motif, :uniprot_id_mouse)
            = table_info_row(motif, :uniprot_ac_human)
            = table_info_row(motif, :uniprot_ac_mouse)
            = table_info_row(motif, :greco_db_tf, header_cell: ('GRECO-DB-TF' + help_icon(href: 'https://www.ebi.ac.uk/QuickGO/targetset/dbTF', title: t('tips.greco_db_tf_html'), html: true)).html_safe)

  .tab-pane.fade#subtypeInfo{role: 'tabpanel', aria: {labelledby: 'subtype-tab'}}
    .row
      .col-12
        %table.key_value_info
          %tbody
            %tr
              %td ChIP-Seq
              %td #{motif.metrics_summary.dig('ChIP-Seq', 'HUMAN', 'num_datasets') || 0} human, #{motif.metrics_summary.dig('ChIP-Seq', 'MOUSE', 'num_datasets') || 0} mouse
              / %td= motif.data.dig('original_motif', 'subtype_info', 'datatype_counts', 'P') || 0
            %tr
              %td HT-SELEX
              %td= motif.metrics_summary.dig('HT-SELEX', 'non-methyl', 'num_datasets') || 0
              / %td= motif.data.dig('original_motif', 'subtype_info', 'datatype_counts', 'S') || 0
            %tr
              %td Methyl-HT-SELEX
              %td= motif.metrics_summary.dig('HT-SELEX', 'methyl', 'num_datasets') || 0
              / %td= motif.data.dig('original_motif', 'subtype_info', 'datatype_counts', 'M') || 0

  .tab-pane.fade#downloadsInfo{role: 'tabpanel', aria: {labelledby: 'downloads-tab'}}
    .row
      .col-12
        %table.key_value_info
          %tbody
            %tr
              %td.row-hdr PCM
              %td= motif.download_pcm
            %tr
              %td.row-hdr PWM
              %td= motif.download_pwm
            %tr
              %td.row-hdr PFM
              %td= motif.download_pfm
            %tr
              %td.row-hdr Alignment
              %td= motif.download_alignment
            %tr
              %td.row-hdr Threshold to P-value map
              %td= motif.download_precalculated_thresholds

            %tr.table-separator
              %td{colspan: 2} Motif in other formats

            %tr
              %td.row-hdr JASPAR format
              %td= motif.download_jaspar_motif
            %tr
              %td.row-hdr MEME format
              %td= motif.download_meme_motif
            %tr
              %td.row-hdr Transfac format
              %td= motif.download_transfac_motif
            %tr
              %td.row-hdr Homer format
              %td
                - ['0.001', '0.0005', '0.0001'].each do |pvalue|
                  .homer_pvalue= motif.download_homer_motif(pvalue: pvalue)

  .tab-pane.fade#matricesInfo{role: 'tabpanel', aria: {labelledby: 'matrices-tab'}}
    .row
      .col-12
        .matrix_container.pcm-matrix
          %span.title PCM
          = motif.pcm

        .matrix_container.pwm-matrix
          %span.title PFM
          = motif.pfm

        .matrix_container.pwm-matrix
          %span.title PWM
          = motif.pwm

        .thresholds-container
          %span.title Standard thresholds
          %table.thresholds
            %thead
              %tr
                %th P-value
                %th Threshold
            %tbody
              - motif.standard_thresholds.each do |pvalue, threshold|
                %tr
                  %td= pvalue
                  %td= threshold.round(6)
/ = table_info_row motif, :comment
/ %tr
/   %td GTEx tissue expression atlas
/   %td= link_to "#{motif.gene_name} expression", motif.gtex_url
/ - if true # motif.species == 'HUMAN'
/   %tr
/     %td ReMap ChIP-Seq dataset list
/     %td= link_to "#{motif.gene_name} datasets", motif.remap_url
/ %tr
/   %td Motifs in JASPAR
/   %td
/     - motif.jaspar_links.each do |title, url|
/       .jaspar_link= link_to title, url


- content_for(:meta_description) do
  = "Motif #{motif.object.full_name} for #{motif.gene_name} #{motif.species.downcase} transcription factor (#{motif.uniprot_id_human} in UniProt)"
- content_for(:meta_thumbnail) do
  = request.base_url + motif.direct_logo_url
- content_for(:title) do
  = "#{motif.object.full_name} motif - HOmo sapiens COmprehensive MOdel COllection"
- content_for(:meta_keywords) do
  = [motif.gene_name_human, motif.gene_name_mouse, motif.uniprot_id_human, motif.uniprot_id_mouse].compact.map(&:strip).join(', ')
